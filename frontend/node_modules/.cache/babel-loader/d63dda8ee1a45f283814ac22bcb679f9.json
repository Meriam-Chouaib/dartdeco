{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\D'ARTDECO\\\\frontend\\\\src\\\\pages\\\\loginScreen\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../../components/loader/Loader';\nimport { login } from '../../actions/userActions';\nimport FormLogin from '../../components/formLogin/FormLogin';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { Alert } from 'antd';\nimport { useLocation } from 'react-router'; //import { useHistory } from \"react-router-dom\";\n\nimport { useNavigate } from 'react-router-dom'; //let history = useHistory();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = () => {\n  _s();\n\n  const history = useNavigate();\n  const location = useLocation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin; //this variables from the userReducers\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history(redirect); //history.push(redirect)\n    }\n  }, [history, userInfo, redirect]); //because when they change it we want to redirect again\n\n  const dispatch = useDispatch();\n\n  function submitHandler(e) {\n    e.preventDefault(); //dispatchlogin\n\n    dispatch(login(email, password)); //passing email and password from the form\n  }\n\n  {\n    /* const dispatch = useDispatch()\r\n    const submitHandler =  (e) => {\r\n      // if (e && e.preventDefault) { // add?\r\n    {/** \r\n      try{\r\n           e.preventDefault();\r\n          // e.persist();\r\n           dispatch(login(email, password))\r\n           console.log('yes')\r\n       }\r\n     catch(error){\r\n       console.log(error)\r\n     }\r\n     try{ e.preventDefault();\r\n     dispatch(login(email, password))\r\n     console.log('yes')}\r\n     catch(error){ console.log(error)}\r\n    } */\n  } //**************form********************************\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLogin, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        } // onFinish={submitHandler}\n        //onFinishFailed={onFinishFailed}\n        ,\n        autoComplete: \"off\",\n        onChange: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'email'],\n          label: \"Email\",\n          rules: [{\n            type: 'email',\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"remember\",\n          valuePropName: \"checked\",\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            htmlType: \"submit\",\n            type: \"primary\",\n            onClick: submitHandler,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"New Customer?\", ` `, /*#__PURE__*/_jsxDEV(\"a\", {\n          href: redirect ? `/register?redirect=${redirect}` : '/register',\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginScreen, \"98/DF0d/UbSUukxrzM5q3ecN89A=\", false, function () {\n  return [useNavigate, useLocation, useSelector, useDispatch];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/pages/loginScreen/LoginScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Loader","login","FormLogin","Form","Input","Button","Checkbox","Alert","useLocation","useNavigate","LoginScreen","history","location","email","setEmail","password","setPassword","userLogin","state","loading","error","userInfo","redirect","search","split","dispatch","submitHandler","e","preventDefault","onFinishFailed","errorInfo","console","log","span","remember","type","required","message","offset"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../components/loader/Loader';\r\nimport { login } from '../../actions/userActions';\r\nimport FormLogin from '../../components/formLogin/FormLogin';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { Alert } from 'antd';\r\nimport { useLocation } from 'react-router';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n    \r\n//let history = useHistory();\r\n\r\n\r\nconst LoginScreen = () => {\r\n  const history = useNavigate();\r\n    const location = useLocation();\r\n     \r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword] = useState('')\r\n\r\n    \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin //this variables from the userReducers\r\n\r\n   \r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  \r\n\r\n\r\n    useEffect (() => {\r\n        if(userInfo){\r\n          history(redirect)\r\n            //history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect]) //because when they change it we want to redirect again\r\n\r\n    const dispatch = useDispatch()\r\n   \r\n\r\n      function submitHandler(e) {\r\n    \r\n    \r\n      e.preventDefault();\r\n      //dispatchlogin\r\n      dispatch(login(email, password)) //passing email and password from the form\r\n   \r\n    \r\n       \r\n    }\r\n    {/* const dispatch = useDispatch()\r\n   const submitHandler =  (e) => {\r\n       // if (e && e.preventDefault) { // add?\r\n     {/** \r\n       try{\r\n            e.preventDefault();\r\n           // e.persist();\r\n            dispatch(login(email, password))\r\n            console.log('yes')\r\n        }\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n      try{ e.preventDefault();\r\n      dispatch(login(email, password))\r\n      console.log('yes')}\r\n      catch(error){ console.log(error)}\r\n     } */}\r\n    \r\n    //**************form********************************\r\n      \r\n\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <h1>Sign in</h1>\r\n     \r\n    \r\n        \r\n        <FormLogin>\r\n        <Form\r\n      name=\"basic\" labelCol={{span: 8,}}\r\n      wrapperCol={{span: 16,}}\r\n      initialValues={{remember: true,}}\r\n     // onFinish={submitHandler}\r\n      //onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n      onChange={submitHandler}\r\n    >\r\n    \r\n      <Form.Item name={['user', 'email']} label=\"Email\" rules={[{ type: 'email', required: true,\r\n            message: 'Please input your username!', }]}>\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"remember\"\r\n        valuePropName=\"checked\"\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button  variant=\"primary\" htmlType=\"submit\" type=\"primary\" onClick={submitHandler}>\r\n          Sign In\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n\r\n        <h1>New Customer?{` `} \r\n        <a href={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n        </a>\r\n        </h1>\r\n    </FormLogin>\r\n  </>\r\n \r\n  )}\r\n\r\nexport default LoginScreen\r\n"]},"metadata":{},"sourceType":"module"}