{"ast":null,"code":"/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n  return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\D'ARTDECO\\frontend\\node_modules\\rxjs\\src\\internal\\util\\isNumeric.ts"],"names":[],"mappings":"AAAA;AAEA,SAAM,OAAN,QAAgB,WAAhB;AAKE,OAAA,SAAQ,SAAR,CAAoB,GAApB,EAAyB;AAC1B,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,GAAA,GAAA,UAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA","sourcesContent":["import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n"]},"metadata":{},"sourceType":"module"}