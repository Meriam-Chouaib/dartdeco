{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\D'ARTDECO\\\\frontend\\\\src\\\\pages\\\\profileScreen\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../../components/loader/Loader';\nimport Message from '../../components/message/Message';\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions';\nimport FormLogin from '../../components/formLogin/FormLogin';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { Alert } from 'antd';\nimport { useLocation } from 'react-router'; //import { useHistory } from \"react-router-dom\";\n\nimport { useNavigate } from 'react-router-dom';\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants'; //let history = useHistory();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails; //this variables from the userReducers\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const location = useLocation();\n  const history = useNavigate();\n  useEffect(() => {\n    if (!userInfo) {\n      history('/signin'); //history.push(redirect)\n    } else {\n      if (!user || !user.name || success) {\n        //if it is success so we have the user update profile\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, user, success]); //because when they change it we want to redirect again\n\n  function submitHandler(e) {\n    e.preventDefault(); //dispatch (sending) login\n\n    if (password !== confirmPassword) {\n      setMessage('password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      })); //dispatch(envoi) id,name,email,password\n    }\n  } //**************form********************************\n\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 1\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-form\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"name\",\n                placeholder: \"Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"Password\",\n                placeholder: \"confirm the password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileScreen, \"VaS2WLe4CmFqa9DiJdDCeCfq9vI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useLocation, useNavigate];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/pages/profileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Loader","Message","getUserDetails","updateUserProfile","FormLogin","Form","Button","Row","Col","Alert","useLocation","useNavigate","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","location","history","type","submitHandler","e","preventDefault","id","_id","onFinishFailed","errorInfo","console","log","target","value"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../components/loader/Loader';\r\nimport Message from '../../components/message/Message';\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions';\r\nimport FormLogin from '../../components/formLogin/FormLogin';\r\nimport { Form , Button,Row,Col } from 'react-bootstrap';\r\nimport { Alert } from 'antd';\r\nimport { useLocation } from 'react-router';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n    \r\n//let history = useHistory();\r\n\r\n\r\nconst ProfileScreen = () => {\r\n \r\n \r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword] = useState('')\r\n    const [confirmPassword , setConfirmPassword] = useState('')\r\n    const [message , setMessage] = useState(null)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails \r\n    //this variables from the userReducers\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile \r\n\r\n    const location = useLocation();\r\n\r\n    \r\n  \r\n    const history = useNavigate();\r\n\r\n    useEffect (() => {\r\n        if(!userInfo){\r\n          history('/signin')\r\n            //history.push(redirect)\r\n        } else {\r\n            if(!user || !user.name || success){\r\n              //if it is success so we have the user update profile\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[dispatch,history, user, success]); //because when they change it we want to redirect again\r\n\r\n    \r\n   \r\n   \r\n\r\n    function submitHandler(e) {\r\n    \r\n      e.preventDefault();\r\n      //dispatch (sending) login\r\n    if(password !== confirmPassword){\r\n        setMessage('password do not match')\r\n\r\n    }else {\r\n      dispatch(updateUserProfile({id:user._id, name, email, password})) \r\n      //dispatch(envoi) id,name,email,password\r\n    }\r\n     \r\n \r\n  }\r\n\r\n    \r\n    //**************form********************************\r\n      \r\n\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n  return (\r\n<>\r\n<h2>User profile</h2>\r\n    { loading ? (<Loader />) \r\n      : error ? (\r\n      <Message variant=\"danger\"> {error}</Message>  \r\n       ) :(\r\n\r\n\r\n      <div className=\"profile-form\">\r\n        \r\n      <Row>\r\n        <Col>\r\n\r\n          <Form  onSubmit={submitHandler}  >\r\n\r\n          <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"name\" placeholder=\"Name\" value={name} \r\n            onChange={(e) => setName(e.target.value)}>\r\n\r\n            </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Email\" value={email} \r\n            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n            </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"password\" value={password} \r\n            onChange={(e) => setPassword(e.target.value)}>\r\n              \r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm password</Form.Label>\r\n          <Form.Control type=\"Password\" placeholder=\"confirm the password\" value={confirmPassword} \r\n            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n              \r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button  type='submit' variant='primary'>\r\n          Update\r\n        </Button>\r\n\r\n        \r\n      \r\n      </Form>\r\n        </Col>\r\n        <Col >\r\n          <h2>My orders</h2>\r\n        </Col>\r\n    </Row>\r\n     \r\n     \r\n\r\n      \r\n   \r\n       </div>\r\n      \r\n \r\n          )\r\n\r\n          \r\n        }\r\n        </> )\r\n  }\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}