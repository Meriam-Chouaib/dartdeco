{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\nexport const userLoginReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //dispatch(envoi) the action to the reducer\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true\n      };\n    //when we make request so its currently loading\n\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        //because we have finished downloading\n        userInfo: action.payload\n      };\n\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const userRegisterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //dispatch(envoi) the action to the reducer\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true\n      };\n    //when we make request so its currently loading\n\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        //because we have finished downloading\n        userInfo: action.payload\n      };\n\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/reducers/userReducers.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","userLoginReducer","state","action","type","loading","userInfo","payload","error","userRegisterReducer"],"mappings":"AAAA,SAAQA,kBAAR,EAA2BC,kBAA3B,EAA8CC,eAA9C,EAA8DC,WAA9D,EAA2EC,qBAA3E,EAAkGC,qBAAlG,EAAyHC,kBAAzH,QAAkJ,4BAAlJ;AAEA,OAAO,MAAMC,gBAAgB,GAAG,YAAsB;AAAA,MAArBC,KAAqB,uEAAd,EAAc;AAAA,MAAVC,MAAU;;AAAE;AAEpD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKV,kBAAL;AAEI,aAAO;AAAEW,QAAAA,OAAO,EAAE;AAAX,OAAP;AACA;;AACJ,SAAKV,kBAAL;AACI,aAAO;AAAEU,QAAAA,OAAO,EAAE,KAAX;AAAkB;AACrBC,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AADd,OAAP;;AAEJ,SAAKX,eAAL;AACI,aAAO;AAAES,QAAAA,OAAO,EAAE,KAAX;AACHG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AADX,OAAP;;AAEJ,SAAKV,WAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOK,KAAP;AAfR;AAiBH,CAnBM;AAqBP,OAAO,MAAMO,mBAAmB,GAAG,YAAsB;AAAA,MAArBP,KAAqB,uEAAd,EAAc;AAAA,MAAVC,MAAU;;AAAE;AAEvD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKN,qBAAL;AAEI,aAAO;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAP;AACA;;AACJ,SAAKN,qBAAL;AACI,aAAO;AAAEM,QAAAA,OAAO,EAAE,KAAX;AAAkB;AACrBC,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AADd,OAAP;;AAEJ,SAAKP,kBAAL;AACI,aAAO;AAAEK,QAAAA,OAAO,EAAE,KAAX;AACHG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AADX,OAAP;;AAGJ;AACI,aAAOL,KAAP;AAdR;AAgBH,CAlBM","sourcesContent":["import {USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state= {}, action) =>{ //dispatch(envoi) the action to the reducer\r\n\r\n    switch(action.type){\r\n\r\n        case USER_LOGIN_REQUEST:\r\n\r\n            return { loading: true} \r\n            //when we make request so its currently loading\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, //because we have finished downloading\r\n                userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false,\r\n                error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport const userRegisterReducer = (state= {}, action) =>{ //dispatch(envoi) the action to the reducer\r\n\r\n    switch(action.type){\r\n\r\n        case USER_REGISTER_REQUEST:\r\n\r\n            return { loading: true} \r\n            //when we make request so its currently loading\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, //because we have finished downloading\r\n                userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false,\r\n                error: action.payload}\r\n      \r\n        default:\r\n            return state\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}