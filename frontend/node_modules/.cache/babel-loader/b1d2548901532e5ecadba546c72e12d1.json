{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\D'ARTDECO\\\\frontend\\\\src\\\\pages\\\\registerScreen\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../../components/loader/Loader';\nimport { register } from '../../actions/userActions';\nimport FormLogin from '../../components/formLogin/FormLogin';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { Alert } from 'antd';\nimport { useLocation } from 'react-router'; //import { useHistory } from \"react-router-dom\";\n\nimport { useNavigate } from 'react-router-dom'; //let history = useHistory();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister; //this variables from the userReducers\n\n  const location = useLocation();\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const history = useNavigate();\n  useEffect(() => {\n    if (userInfo) {\n      history(redirect); //history.push(redirect)\n    }\n  }, [history, userInfo, redirect]); //because when they change it we want to redirect again\n\n  const dispatch = useDispatch();\n\n  function submitHandler(e) {\n    e.preventDefault(); //dispatch (sending) login\n\n    if (password !== confirmPassword) {\n      setMessage('password do not match');\n    } else {\n      dispatch(register(name, email, password)); //passing email and password from the form\n    }\n  } //**************form********************************\n\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Error Text\",\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"Password\",\n          placeholder: \"confirm the password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Have an account?\", ` `, /*#__PURE__*/_jsxDEV(\"a\", {\n        href: redirect ? `/signin?redirect=${redirect}` : '/signin',\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegisterScreen, \"xscW5j6tPaWwypl0G9ngHgfd8Ao=\", false, function () {\n  return [useSelector, useLocation, useNavigate, useDispatch];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/pages/registerScreen/RegisterScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Loader","register","FormLogin","Form","Button","Row","Col","Alert","useLocation","useNavigate","RegisterScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","userRegister","state","loading","error","userInfo","location","redirect","search","split","history","dispatch","submitHandler","e","preventDefault","onFinishFailed","errorInfo","console","log","target","value"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../components/loader/Loader';\r\nimport { register } from '../../actions/userActions';\r\nimport FormLogin from '../../components/formLogin/FormLogin';\r\nimport { Form , Button,Row,Col } from 'react-bootstrap';\r\nimport { Alert } from 'antd';\r\nimport { useLocation } from 'react-router';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n    \r\n//let history = useHistory();\r\n\r\n\r\nconst RegisterScreen = () => {\r\n \r\n \r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword] = useState('')\r\n    const [confirmPassword , setConfirmPassword] = useState('')\r\n    const [message , setMessage] = useState(null)\r\n\r\n\r\n   \r\n    \r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister \r\n    //this variables from the userReducers\r\n\r\n    const location = useLocation();\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  \r\n    const history = useNavigate();\r\n\r\n    useEffect (() => {\r\n        if(userInfo){\r\n          history(redirect)\r\n            //history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect]) //because when they change it we want to redirect again\r\n\r\n    \r\n    const dispatch = useDispatch()\r\n   \r\n\r\n    function submitHandler(e) {\r\n    \r\n      e.preventDefault();\r\n      //dispatch (sending) login\r\n    if(password !== confirmPassword){\r\n        setMessage('password do not match')\r\n\r\n    }else {\r\n        dispatch(register(name,email, password)) \r\n      //passing email and password from the form\r\n    }\r\n     \r\n \r\n  }\r\n\r\n    \r\n    //**************form********************************\r\n      \r\n\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <h1>Sign Up</h1>\r\n        {message &&     <Alert message=\"Error Text\" type=\"error\" />}\r\n        <Form  onSubmit={submitHandler}  >\r\n\r\n        <Form.Group>\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control type=\"name\" placeholder=\"Name\" value={name} \r\n          onChange={(e) => setName(e.target.value)}>\r\n\r\n          </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Email\" value={email} \r\n          onChange={(e) => setEmail(e.target.value)}>\r\n\r\n          </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"password\" value={password} \r\n          onChange={(e) => setPassword(e.target.value)}>\r\n            \r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='confirmPassword'>\r\n        <Form.Label>Confirm password</Form.Label>\r\n        <Form.Control type=\"Password\" placeholder=\"confirm the password\" value={confirmPassword} \r\n          onChange={(e) => setConfirmPassword(e.target.value)}>\r\n            \r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button  type='submit' variant='primary'>\r\n        Register\r\n      </Button>\r\n\r\n      \r\n     \r\n    </Form>\r\n\r\n        <h1>Have an account?{` `} \r\n        <a href={redirect ? `/signin?redirect=${redirect}` : '/signin'}>\r\n            Login\r\n        </a>\r\n        </h1>\r\n   \r\n  </>\r\n \r\n  )}\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}