{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\D'ARTDECO\\\\frontend\\\\src\\\\pages\\\\loginScreen\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../../components/loader/Loader';\nimport { login } from '../../actions/userActions';\nimport FormLogin from '../../components/formLogin/FormLogin';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { Alert } from 'antd';\nimport { useLocation } from 'react-router'; //import { useHistory } from \"react-router-dom\";\n\nimport { useNavigate } from 'react-router-dom';\nimport { FORMERR } from 'dns'; //let history = useHistory();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = () => {\n  _s();\n\n  const history = useNavigate();\n  const location = useLocation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin; //this variables from the userReducers\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history(redirect); //history.push(redirect)\n    }\n  }, [history, userInfo, redirect]); //because when they change it we want to redirect again\n\n  const dispatch = useDispatch();\n\n  function submitHandler(e) {\n    e.preventDefault(); //dispatchlogin\n\n    dispatch(login(email, password)); //passing email and password from the form\n  }\n\n  {\n    /* const dispatch = useDispatch()\r\n    const submitHandler =  (e) => {\r\n      // if (e && e.preventDefault) { // add?\r\n    {/** \r\n      try{\r\n           e.preventDefault();\r\n          // e.persist();\r\n           dispatch(login(email, password))\r\n           console.log('yes')\r\n       }\r\n     catch(error){\r\n       console.log(error)\r\n     }\r\n     try{ e.preventDefault();\r\n     dispatch(login(email, password))\r\n     console.log('yes')}\r\n     catch(error){ console.log(error)}\r\n    } */\n  } //**************form********************************\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"New Customer?\", ` `, /*#__PURE__*/_jsxDEV(\"a\", {\n        href: redirect ? `/register?redirect=${redirect}` : '/register',\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginScreen, \"98/DF0d/UbSUukxrzM5q3ecN89A=\", false, function () {\n  return [useNavigate, useLocation, useSelector, useDispatch];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/pages/loginScreen/LoginScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Loader","login","FormLogin","Form","Button","Row","Col","Alert","useLocation","useNavigate","FORMERR","LoginScreen","history","location","email","setEmail","password","setPassword","userLogin","state","loading","error","userInfo","redirect","search","split","dispatch","submitHandler","e","preventDefault","onFinishFailed","errorInfo","console","log","target","value"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../components/loader/Loader';\r\nimport { login } from '../../actions/userActions';\r\nimport FormLogin from '../../components/formLogin/FormLogin';\r\nimport { Form , Button,Row,Col } from 'react-bootstrap';\r\nimport { Alert } from 'antd';\r\nimport { useLocation } from 'react-router';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { FORMERR } from 'dns';\r\n\r\n    \r\n//let history = useHistory();\r\n\r\n\r\nconst LoginScreen = () => {\r\n  const history = useNavigate();\r\n    const location = useLocation();\r\n     \r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword] = useState('')\r\n\r\n    \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin //this variables from the userReducers\r\n\r\n   \r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  \r\n\r\n\r\n    useEffect (() => {\r\n        if(userInfo){\r\n          history(redirect)\r\n            //history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect]) //because when they change it we want to redirect again\r\n\r\n    const dispatch = useDispatch()\r\n   \r\n\r\n      function submitHandler(e) {\r\n    \r\n    \r\n      e.preventDefault();\r\n      //dispatchlogin\r\n      dispatch(login(email, password)) //passing email and password from the form\r\n   \r\n    \r\n       \r\n    }\r\n    {/* const dispatch = useDispatch()\r\n   const submitHandler =  (e) => {\r\n       // if (e && e.preventDefault) { // add?\r\n     {/** \r\n       try{\r\n            e.preventDefault();\r\n           // e.persist();\r\n            dispatch(login(email, password))\r\n            console.log('yes')\r\n        }\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n      try{ e.preventDefault();\r\n      dispatch(login(email, password))\r\n      console.log('yes')}\r\n      catch(error){ console.log(error)}\r\n     } */}\r\n    \r\n    //**************form********************************\r\n      \r\n\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <h1>Sign in</h1>\r\n\r\n        <Form  onSubmit={submitHandler}  >\r\n      <Form.Group>\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Email\" value={email} \r\n          onChange={(e) => setEmail(e.target.value)}>\r\n\r\n          </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"password\" value={password} \r\n          onChange={(e) => setPassword(e.target.value)}>\r\n            \r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Button  type='submit' variant='primary'>\r\n        Sign In\r\n      </Button>\r\n\r\n      \r\n     \r\n    </Form>\r\n\r\n        <h1>New Customer?{` `} \r\n        <a href={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n        </a>\r\n        </h1>\r\n   \r\n  </>\r\n \r\n  )}\r\n\r\nexport default LoginScreen\r\n"]},"metadata":{},"sourceType":"module"}