{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\D'ARTDECO\\\\frontend\\\\src\\\\components\\\\rating\\\\Rating.tsx\";\nimport React from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { Rate } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rating = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(Rate, {\n        allowHalf: true,\n        value: props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), props.value ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ant-rate-text\",\n        children: props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Rating;\nexport default Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/components/rating/Rating.tsx"],"names":["React","Rate","Rating","props","value","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,uCAAP;AACA,SAASC,IAAT,QAAqB,MAArB;;;AASA,MAAMC,MAAM,GAAIC,KAAD,IAAmB;AAC9B,sBACI;AAAA,4BACA;AAAA,gBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADA,eAEI;AAAA,gBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIF;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAkB,QAAA,KAAK,EAAEF,KAAK,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,KAAK,CAACC,KAAN,gBAAc;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAiCD,KAAK,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAd,GAAqE,EAFxE;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH,CArDD;;KAAMF,M;AAuDN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee} from '@fortawesome/free-solid-svg-icons'\r\nimport { IconName } from '@fortawesome/fontawesome-common-types';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Rate } from 'antd';\r\n\r\ninterface rating{\r\n    value: number;\r\n    text:string;\r\n    \r\n}\r\n\r\n\r\nconst Rating = (props: rating) => {\r\n    return (\r\n        <div>\r\n        <h1>{props.value}</h1>    \r\n            <h2>{props.text}</h2>\r\n\r\n      <span>\r\n        <Rate allowHalf   value={props.value} />\r\n        {props.value ? <span className=\"ant-rate-text\">{props.value}</span> : ''}\r\n\r\n      </span>\r\n{/*<div className=\"stars\">\r\n                <span>\r\n                    <i className={props.value >= 1\r\n                    ? 'fas fa-star' \r\n                    : props.value >= 0.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    :'fas fa-star' }></i>\r\n                 </span>\r\n                 <span>\r\n                    <i className={props.value >= 2\r\n                    ? 'fas fa-star' \r\n                    : props.value >= 1.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    :'fas fa-star' }></i>\r\n                 </span>\r\n                 <span>\r\n                    <i className={props.value >= 3\r\n                    ? 'fas fa-star' \r\n                    : props.value >= 2.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    :'fas fa-star' }></i>\r\n                 </span>\r\n                 <span>\r\n                    <i className={props.value >= 4\r\n                    ? 'fas fa-star' \r\n                    : props.value >= 3.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    :'fas fa-star' }></i>\r\n                 </span>\r\n                 <span>\r\n                    <i className={props.value >= 5\r\n                    ? 'fas fa-star' \r\n                    : props.value >= 4.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    :'fas fa-star' }></i>\r\n                 </span>\r\n                 <span>{props.text && props.text }{/*if there is text display it else vide--{props.text ? props.text : ''}==props.text && props.text*/}{/*</span>\r\n                </div> */}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Rating\r\n"]},"metadata":{},"sourceType":"module"}