{"ast":null,"code":"import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nexport const productListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    products: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //dispatch(envoi) the action to the reducer\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return {\n        loading: true,\n        products: []\n      };\n    //when we make request so its currently loading\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        //because we have finished downloading\n        products: action.payload\n      };\n\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const productDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    product: {\n      reviews: []\n    }\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //dispatch(envoi) the action to the reducer\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        loading: true,\n        ...state\n      };\n    //...state whatever in the state display it\n    //when we make request so its currently loading\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        //because we have finished downloading\n        products: action.payload\n      };\n\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/reducers/productReducers.js"],"names":["PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","productListReducer","state","products","action","type","loading","payload","error","productDetailsReducer","product","reviews"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,uBAA/B,EAAwDC,uBAAxD,EAAiFC,iBAAjF,EAAmGC,oBAAnG,EAAwHC,oBAAxH,QAAoJ,+BAApJ;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA5B;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAA4B;AAAA,MAAVC,MAAU;;AAAE;AAEpE,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKN,oBAAL;AAEI,aAAO;AAAEO,QAAAA,OAAO,EAAE,IAAX;AAAiBH,QAAAA,QAAQ,EAAE;AAA3B,OAAP;AACA;;AACJ,SAAKH,oBAAL;AACI,aAAO;AAAEM,QAAAA,OAAO,EAAE,KAAX;AAAkB;AACrBH,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AADd,OAAP;;AAEJ,SAAKT,iBAAL;AACI,aAAO;AAAEQ,QAAAA,OAAO,EAAE,KAAX;AACHE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AADX,OAAP;;AAEJ;AACI,aAAOL,KAAP;AAbR;AAeH,CAjBM;AAmBP,OAAO,MAAMO,qBAAqB,GAAG,YAAgD;AAAA,MAA/CP,KAA+C,uEAAxC;AAAEQ,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAAX,GAAwC;AAAA,MAAVP,MAAU;;AAAE;AAEnF,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKT,uBAAL;AAEI,aAAO;AAAEU,QAAAA,OAAO,EAAE,IAAX;AAAiB,WAAIJ;AAArB,OAAP;AAAoC;AACpC;;AACJ,SAAKL,uBAAL;AACI,aAAO;AAAES,QAAAA,OAAO,EAAE,KAAX;AAAkB;AACrBH,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AADd,OAAP;;AAEJ,SAAKZ,oBAAL;AACI,aAAO;AAAEW,QAAAA,OAAO,EAAE,KAAX;AACHE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AADX,OAAP;;AAEJ;AACI,aAAOL,KAAP;AAbR;AAeH,CAjBM","sourcesContent":["import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL,PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\"\r\n\r\nexport const productListReducer = (state= { products: [] }, action) =>{ //dispatch(envoi) the action to the reducer\r\n\r\n    switch(action.type){\r\n\r\n        case PRODUCT_LIST_REQUEST:\r\n\r\n            return { loading: true, products: []} \r\n            //when we make request so its currently loading\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, //because we have finished downloading\r\n                products: action.payload}\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false,\r\n                error: action.payload}\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport const productDetailsReducer = (state= { product: { reviews: [] } }, action) =>{ //dispatch(envoi) the action to the reducer\r\n\r\n    switch(action.type){\r\n\r\n        case PRODUCT_DETAILS_REQUEST:\r\n\r\n            return { loading: true, ... state}  //...state whatever in the state display it\r\n            //when we make request so its currently loading\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, //because we have finished downloading\r\n                products: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false,\r\n                error: action.payload}\r\n        default:\r\n            return state\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}