{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducers } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  // we put the reducers here in the {}\n  productDetails: productDetailsReducer,\n  cart: cartReducers\n}); //if there in something we want to load it when redux start load we put it here\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware))); //...middleware meaning whatever he passing here const middleware = [thunk] in the [thunk] he recupere here\n\nexport default store;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/D'ARTDECO/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducers","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAGA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAEJ,kBADe;AACK;AACjCK,EAAAA,cAAc,EAAEJ,qBAFY;AAG5BK,EAAAA,IAAI,EAAEJ;AAHsB,CAAD,CAA/B,C,CAQA;;AAEA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAChEH,YAAY,CAACC,OAAb,CAAqB,WAArB,CADgE,CAApC,GACQ,EADrC;AAGA,MAAMG,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CACrBQ,OADqB,EAEpBS,YAFoB,EAGnBb,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHA,CAAzB,C,CAKI;;AAEJ,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducers } from './reducers/cartReducers' \r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer, // we put the reducers here in the {}\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducers,\r\n})\r\n \r\n\r\n\r\n//if there in something we want to load it when redux start load we put it here\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse\r\n(localStorage.getItem('cartItems')): []\r\n\r\nconst initialState = {} \r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n     initialState,\r\n      composeWithDevTools(applyMiddleware(...middleware))\r\n       )\r\n    //...middleware meaning whatever he passing here const middleware = [thunk] in the [thunk] he recupere here\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}