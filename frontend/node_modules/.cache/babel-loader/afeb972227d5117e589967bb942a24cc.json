{"ast":null,"code":"/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nexport function publishBehavior(value) {\n  return function (source) {\n    return multicast(new BehaviorSubject(value))(source);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\D'ARTDECO\\frontend\\node_modules\\rxjs\\src\\internal\\operators\\publishBehavior.ts"],"names":[],"mappings":"AACA;AACA,SAAS,eAAT,QAA0B,oBAA1B;AAUA,SAAM,SAAN,QAAgB,aAAhB;AACE,OAAA,SAAO,eAAP,CAAkC,KAAlC,EAAkC;AACnC,SAAA,UAAA,MAAA,EAAA;AAAA,WAAA,SAAA,CAAA,IAAA,eAAA,CAAA,KAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AAAA,GAAA","sourcesContent":["import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n"]},"metadata":{},"sourceType":"module"}